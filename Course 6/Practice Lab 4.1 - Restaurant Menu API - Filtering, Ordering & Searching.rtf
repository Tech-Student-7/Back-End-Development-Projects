{\rtf1\ansi\ansicpg1252\cocoartf2753
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue254;\red0\green0\blue0;
\red0\green0\blue255;\red19\green118\blue70;\red144\green1\blue18;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c0\c0\c100000;\cssrgb\c3529\c52549\c34510;\cssrgb\c63922\c8235\c8235;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Shell commands:\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Activate virtual environment using pipenv \cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 pipenv shell\cb1 \
\cb3 pipenv install\cb1 \
\cb3  \cb1 \
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Making migrations\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 python3 manage.py makemigrations\cb1 \
\cb3 python3 manage.py migrate\cb1 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 Models.py:\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf5 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 from\cf0 \cb3 \strokec4  django.db \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  models\cb1 \
\
\cf5 \cb3 \strokec5 class\cf0 \cb3 \strokec4  Category(models.Model):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     slug = models.SlugField()\cb1 \
\cb3     title = models.CharField(max_length=\cf6 \cb3 \strokec6 255\cf0 \cb3 \strokec4 )\cb1 \
\
\cb3     \cf5 \cb3 \strokec5 def\cf0 \cb3 \strokec4  __str__(\cf5 \cb3 \strokec5 self\cf0 \cb3 \strokec4 )-> \cf5 \cb3 \strokec5 str\cf0 \cb3 \strokec4 :\cb1 \
\cb3         \cf5 \cb3 \strokec5 return\cf0 \cb3 \strokec4  \cf5 \cb3 \strokec5 self\cf0 \cb3 \strokec4 .title\cb1 \
\cb3     \cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 class\cf0 \cb3 \strokec4  MenuItem(models.Model):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     title = models.CharField(max_length=\cf6 \cb3 \strokec6 255\cf0 \cb3 \strokec4 )\cb1 \
\cb3     price = models.DecimalField(max_digits=\cf6 \cb3 \strokec6 6\cf0 \cb3 \strokec4 , decimal_places=\cf6 \cb3 \strokec6 2\cf0 \cb3 \strokec4 )\cb1 \
\cb3     inventory = models.SmallIntegerField()\cb1 \
\cb3     category = models.ForeignKey(Category, on_delete=models.PROTECT, default=\cf6 \cb3 \strokec6 1\cf0 \cb3 \strokec4 )\cb1 \
\
\cb3     \cf5 \cb3 \strokec5 def\cf0 \cb3 \strokec4  __str__(\cf5 \cb3 \strokec5 self\cf0 \cb3 \strokec4 )-> \cf5 \cb3 \strokec5 str\cf0 \cb3 \strokec4 :\cb1 \
\cb3         \cf5 \cb3 \strokec5 return\cf0 \cb3 \strokec4  \cf5 \cb3 \strokec5 self\cf0 \cb3 \strokec4 .title\cb1 \
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 urls.py:\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  django.urls \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  path\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  . \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  views\cb1 \
\
\cb3 urlpatterns = [\cb1 \
\cb3     path(\cf7 \cb3 \strokec7 'categories'\cf0 \cb3 \strokec4 , views.CategoriesView.as_view()),\cb1 \
\cb3     path(\cf7 \cb3 \strokec7 'menu-items'\cf0 \cb3 \strokec4 , views.MenuItemsView.as_view()),\cb1 \
\cb3 ]\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 views.py:\
\

\f1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  rest_framework \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  generics\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  .models \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  MenuItem, Category\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  .serializers \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  MenuItemSerializer, CategorySerializer\cb1 \
\
\cf5 \cb3 \strokec5 class\cf0 \cb3 \strokec4  CategoriesView(generics.ListCreateAPIView):\cb1 \
\cb3     queryset = Category.objects.\cf5 \cb3 \strokec5 all\cf0 \cb3 \strokec4 ()\cb1 \
\cb3     serializer_class = CategorySerializer\cb1 \
\
\cf5 \cb3 \strokec5 class\cf0 \cb3 \strokec4  MenuItemsView(generics.ListCreateAPIView):\cb1 \
\cb3     queryset = MenuItem.objects.\cf5 \cb3 \strokec5 all\cf0 \cb3 \strokec4 ()\cb1 \
\cb3     serializer_class = MenuItemSerializer\cb1 \
\cb3     ordering_fields = [\cf7 \cb3 \strokec7 'price'\cf0 \cb3 \strokec4 , \cf7 \cb3 \strokec7 'inventory'\cf0 \cb3 \strokec4 ]\cb1 \
\cb3     filterset_fields = [\cf7 \cb3 \strokec7 'price'\cf0 \cb3 \strokec4 , \cf7 \cb3 \strokec7 'inventory'\cf0 \cb3 \strokec4 ]\cb1 \
\cb3     search_fields = [\cf7 \cb3 \strokec7 'title'\cf0 \cb3 \strokec4 ]\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 serializers.py:\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf5 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 from\cf0 \cb3 \strokec4  rest_framework \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  serializers\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  .models \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  MenuItem, Category\cb1 \
\
\cf5 \cb3 \strokec5 class\cf0 \cb3 \strokec4  CategorySerializer (serializers.ModelSerializer):\cb1 \
\cb3     \cf5 \cb3 \strokec5 class\cf0 \cb3 \strokec4  Meta:\cb1 \
\cb3         model = Category\cb1 \
\cb3         fields = [\cf7 \cb3 \strokec7 'id'\cf0 \cb3 \strokec4 ,\cf7 \cb3 \strokec7 'title'\cf0 \cb3 \strokec4 ]\cb1 \
\
\cf5 \cb3 \strokec5 class\cf0 \cb3 \strokec4  MenuItemSerializer(serializers.ModelSerializer):\cb1 \
\cb3     category_id = serializers.IntegerField(write_only=\cf5 \cb3 \strokec5 True\cf0 \cb3 \strokec4 )\cb1 \
\cb3     category = CategorySerializer(read_only=\cf5 \cb3 \strokec5 True\cf0 \cb3 \strokec4 )\cb1 \
\cb3     \cf5 \cb3 \strokec5 class\cf0 \cb3 \strokec4  Meta:\cb1 \
\cb3         model = MenuItem\cb1 \
\cb3         fields = [\cf7 \cb3 \strokec7 'id'\cf0 \cb3 \strokec4 ,\cf7 \cb3 \strokec7 'title'\cf0 \cb3 \strokec4 ,\cf7 \cb3 \strokec7 'price'\cf0 \cb3 \strokec4 ,\cf7 \cb3 \strokec7 'inventory'\cf0 \cb3 \strokec4 ,\cf7 \cb3 \strokec7 'category'\cf0 \cb3 \strokec4 ,\cf7 \cb3 \strokec7 'category_id'\cf0 \cb3 \strokec4 ]\cb1 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \

\f0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 settings.py\
\
\pard\pardeftab720\partightenfactor0

\f1 \cf0 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 REST_FRAMEWORK = \{\cb1 \
\cb3     \cf7 \cb3 \strokec7 'DEFAULT_FILTER_BACKENDS'\cf0 \cb3 \strokec4 : [\cb1 \
\cb3         \cf7 \cb3 \strokec7 'rest_framework.filters.OrderingFilter'\cf0 \cb3 \strokec4 ,\cb1 \
\cb3         \cf7 \cb3 \strokec7 'rest_framework.filters.SearchFilter'\cf0 \cb3 \strokec4 ,\cb1 \
\cb3     ],\cb1 \
\cb3     \cf7 \cb3 \strokec7 'DEFAULT_PAGINATION_CLASS'\cf0 \cb3 \strokec4 : \cf7 \cb3 \strokec7 'rest_framework.pagination.PageNumberPagination'\cf0 \cb3 \strokec4 ,\cb1 \
\cb3     \cf7 \cb3 \strokec7 'PAGE_SIZE'\cf0 \cb3 \strokec4 : \cf6 \cb3 \strokec6 3\cf0 \cb1 \strokec4 \
\cb3 \}\cb1 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
}