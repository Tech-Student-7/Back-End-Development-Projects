{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red15\green112\blue1;\red255\green255\blue254;\red0\green0\blue0;
\red0\green0\blue255;\red107\green0\blue1;\red144\green1\blue18;\red19\green118\blue70;}
{\*\expandedcolortbl;;\cssrgb\c0\c50196\c0;\cssrgb\c100000\c100000\c99608;\cssrgb\c0\c0\c0;
\cssrgb\c0\c0\c100000;\cssrgb\c50196\c0\c0;\cssrgb\c63922\c8235\c8235;\cssrgb\c3529\c52549\c34510;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \ul \ulc0 Shell Commands:\
\ulnone \
\pard\pardeftab720\partightenfactor0

\f1 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 # Activate virtual environment using pipenv \cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 pipenv shell\cb1 \
\cb3 pipenv install\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Making migrations\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 python3 manage.py makemigrations\cb1 \
\cb3 python3 manage.py migrate\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf0 \ul \ulc0 models.py\ulnone :\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Activate virtual environment using pipenv \cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 pipenv shell\cb1 \
\cb3 pipenv install\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Making migrations\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3 python3 manage.py makemigrations\cb1 \
\cb3 python3 manage.py migrate\cb1 \
\
\pard\pardeftab720\partightenfactor0
\cf0 \ul \ulc0 urls.py (app-level):\
\ulnone \
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Activate virtual environment using pipenv \cf0 \cb1 \strokec4 \
\cb3 pipenv shell\cb1 \
\cb3 pipenv install\cb1 \
\
\cf2 \cb3 \strokec2 # Making migrations\cf0 \cb1 \strokec4 \
\cb3 python3 manage.py makemigrations\cb1 \
\cb3 python3 manage.py migrate\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \
\
\ul views.py:\
\ulnone \
\pard\pardeftab720\partightenfactor0
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  django.db \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  IntegrityError\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  django.http \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  HttpResponse, JsonResponse\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  .models \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  Book\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  django.views.decorators.csrf \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  csrf_exempt\cb1 \
\cf5 \cb3 \strokec5 from\cf0 \cb3 \strokec4  django.forms.models \cf5 \cb3 \strokec5 import\cf0 \cb3 \strokec4  model_to_dict\cb1 \
\
\
\pard\pardeftab720\partightenfactor0
\cf2 \cb3 \strokec2 # Create your views here.\cf0 \cb1 \strokec4 \
\pard\pardeftab720\partightenfactor0
\cf6 \cb3 \strokec6 @csrf_exempt\cf0 \cb1 \strokec4 \
\cf5 \cb3 \strokec5 def\cf0 \cb3 \strokec4  books(request):\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \cb3     \cf5 \cb3 \strokec5 if\cf0 \cb3 \strokec4  request.method == \cf7 \cb3 \strokec7 'GET'\cf0 \cb3 \strokec4 :\cb1 \
\cb3         books = Book.objects.\cf5 \cb3 \strokec5 all\cf0 \cb3 \strokec4 ().values()\cb1 \
\cb3         \cf5 \cb3 \strokec5 return\cf0 \cb3 \strokec4  JsonResponse(\{\cf7 \cb3 \strokec7 "books"\cf0 \cb3 \strokec4 :\cf5 \cb3 \strokec5 list\cf0 \cb3 \strokec4 (books)\})\cb1 \
\cb3     \cf5 \cb3 \strokec5 elif\cf0 \cb3 \strokec4  request.method == \cf7 \cb3 \strokec7 'POST'\cf0 \cb3 \strokec4 :\cb1 \
\cb3         title = request.POST.get(\cf7 \cb3 \strokec7 'title'\cf0 \cb3 \strokec4 )\cb1 \
\cb3         author = request.POST.get(\cf7 \cb3 \strokec7 'author'\cf0 \cb3 \strokec4 )\cb1 \
\cb3         price = request.POST.get(\cf7 \cb3 \strokec7 'price'\cf0 \cb3 \strokec4 )\cb1 \
\cb3         book = Book(\cb1 \
\cb3             title = title,\cb1 \
\cb3             author = author,\cb1 \
\cb3             price = price\cb1 \
\cb3         )\cb1 \
\cb3         \cf5 \cb3 \strokec5 try\cf0 \cb3 \strokec4 :\cb1 \
\cb3             book.save()\cb1 \
\cb3         \cf5 \cb3 \strokec5 except\cf0 \cb3 \strokec4  IntegrityError:\cb1 \
\cb3             \cf5 \cb3 \strokec5 return\cf0 \cb3 \strokec4  JsonResponse(\{\cf7 \cb3 \strokec7 'error'\cf0 \cb3 \strokec4 :\cf7 \cb3 \strokec7 'true'\cf0 \cb3 \strokec4 ,\cf7 \cb3 \strokec7 'message'\cf0 \cb3 \strokec4 :\cf7 \cb3 \strokec7 'required field missing'\cf0 \cb3 \strokec4 \},status=\cf8 \cb3 \strokec8 400\cf0 \cb3 \strokec4 )\cb1 \
\
\cb3         \cf5 \cb3 \strokec5 return\cf0 \cb3 \strokec4  JsonResponse(model_to_dict(book), status=\cf8 \cb3 \strokec8 201\cf0 \cb3 \strokec4 )\cb1 \
\pard\pardeftab720\partightenfactor0
\cf0 \
}